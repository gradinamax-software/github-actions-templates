name: Build and Push Docker Images

on:
  workflow_call:

env:
  REGISTRY: ghcr.io  # Hardcoded registry
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    if: ${{ github.ref_name }} != 'master'  # Skip if the branch is master
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # Checkout the caller repository
      - name: Checkout caller repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}

      # Download Dockerfile and Nginx configuration from reusable workflow repository
      - name: Download Dockerfile and Nginx configuration from reusable workflow repository
        run: |
          # Set the repository and paths
          WORKFLOW_REPO="gradinamax-software/github-actions-templates"
          DOCKERFILE_PATH=".github/docker/Dockerfile"
          NGINX_CONF_PATH=".github/docker/nginx.conf"
          DEFAULT_CONF_PATH=".github/docker/default.conf"

          # Clone repository and fetch specific files
          git clone --no-checkout https://github.com/$WORKFLOW_REPO.git workflow-repo
          cd workflow-repo
          git checkout origin/main -- $DOCKERFILE_PATH $NGINX_CONF_PATH $DEFAULT_CONF_PATH
          cd ..

          # Copy the Dockerfile and Nginx configurations to the current directory
          cp workflow-repo/$DOCKERFILE_PATH ./Dockerfile
          cp workflow-repo/$NGINX_CONF_PATH ./nginx.conf
          cp workflow-repo/$DEFAULT_CONF_PATH ./default.conf

      # Debug step: List files in working directory to verify Dockerfile is present
      - name: List files in working directory
        run: ls -la

      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
